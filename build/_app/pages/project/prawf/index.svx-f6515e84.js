import{S as Ca,i as Ta,s as Pa,C as qt,w as Ra,x as Wa,y as Aa,z as Ha,A as Ea,q as Oa,o as Ja,B as $a,U as ga,e as r,t as s,k as c,c as l,a as p,h as n,d as t,m as d,b as u,g as i,F as a,H as qa}from"../../../chunks/vendor-a3554607.js";import{P as Ma}from"../../../chunks/project-002a1501.js";import"../../../chunks/stores-5109c37e.js";import"../../../chunks/github-a76e40b1.js";import"../../../chunks/Progress-da00dd34.js";/* empty css                                      */function Da(F){let h,m,_,j,f,v,x,C,U,Le,ve,z,Ve,be,T,L,Ye,we,b,Be,P,Ge,Ne,R,Ze,Ke,Ie,V,Qe,ye,w,Xe,le,et,tt,pe,at,ot,_e,Y,st,ke,B,nt,Ee,W,G,it,ge,N,rt,Se,Z,lt,je,A,K,pt,xe,k,ut,ue,ht,ct,Ce,H,ja=`<code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">let</span> currentTheme<span class="token operator">:</span> Theme <span class="token operator">=</span> <span class="token string">"light"</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> currentTheme$ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject<span class="token operator">&lt;</span>ThemeState<span class="token operator">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
currentTheme$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> current <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  currentTheme <span class="token operator">=</span> current<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Te,Q,dt,Pe,O,X,ft,Re,E,mt,he,vt,bt,We,J,ee,wt,Ae,g,It,$,yt,_t,He,q,te,kt,Oe,I,Et,ce,gt,St,de,jt,xt,Je,y,Ct,fe,Tt,Pt,me,Rt,Wt,$e,M,ae,At,qe,oe,Ht,Me,S,Ot,D,Jt,$t;return{c(){h=r("p"),m=r("strong"),_=s("Prawf"),j=s(" is a Pauli Test simulation app made with Web Component and RxJS. You can find the reason why I made this in "),f=r("a"),v=s("the project repo"),x=c(),C=r("h2"),U=r("a"),Le=s("Web Component"),ve=c(),z=r("p"),Ve=s("I chose Web Component because I want to try to experiment with it. I used it briefly in the past and I have no idea what I\u2019m doing so I want to try to use it again."),be=c(),T=r("h2"),L=r("a"),Ye=s("Styling"),we=c(),b=r("p"),Be=s("I was going to use "),P=r("a"),Ge=s("Tailwind"),Ne=s(" but then I realised I use Web Component and I have no idea how to set it up. The second option is "),R=r("a"),Ze=s("Open Props"),Ke=s(" but then I thought it\u2019s a bit overkill for what I\u2019m doing."),Ie=c(),V=r("p"),Qe=s("Since I don\u2019t use Web Component that much, there are probably some questionable things that I\u2019ve done, and one of them is importing CSS as a string and then including it in the template."),ye=c(),w=r("p"),Xe=s("I imported the css string using "),le=r("code"),et=s("?inline"),tt=s(" directive from Vite to import a file as a string. The result is\u2026 there are quite a lot of unnecessary whitespaces which makes the final HTML bigger. I\u2019m sure I could "),pe=r("em"),at=s("probably"),ot=s(" minify it, but it\u2019s fine for now."),_e=c(),Y=r("p"),st=s("One of the things that I like from Web Component is component isolation; meaning that other component won\u2019t touch each other, they\u2019re isolated. This is good and bad, the good is I don\u2019t need to worry about accidentally touching other components, the bad is I duplicated a bunch of CSS because I couldn\u2019t use utility classes."),ke=c(),B=r("p"),nt=s("Oh, I also added a darkmode with an animated toggle button because why not \u30C4 It isn\u2019t persisted, though."),Ee=c(),W=r("h2"),G=r("a"),it=s("Reactivity"),ge=c(),N=r("p"),rt=s("Making something Reactive is very easy thanks to RxJS. I don\u2019t think I struggle that much in this section. Again, I don\u2019t use RxJS that much so there is definitely room for improvement."),Se=c(),Z=r("p"),lt=s("For example, I re-render the entire component instead of modifying the node that I changed because I feel re-rendering the entire thing is a lot simpler and I don\u2019t think it slows my app."),je=c(),A=r("h2"),K=r("a"),pt=s("State Management"),xe=c(),k=r("p"),ut=s("I use Svelte quite a bit, so I tried to make "),ue=r("code"),ht=s("svelte/store"),ct=s("-style state management using RxJS Subject. Here\u2019s an example."),Ce=c(),H=r("pre"),Te=c(),Q=r("p"),dt=s("I use a variable to persist the last state because I couldn\u2019t find a way to \u201Cget\u201D the last value from RxJS Subject."),Pe=c(),O=r("h2"),X=r("a"),ft=s("Routing"),Re=c(),E=r("p"),mt=s("I made a Subject to change the route. The way it works is actually pretty simple. Whenever I want to navigate to another page, I just need to emit a path as a string to the Subject and it will change the route using "),he=r("code"),vt=s("history.pushState"),bt=s("."),We=c(),J=r("h2"),ee=r("a"),wt=s("Chart"),Ae=c(),g=r("p"),It=s("I decided to build the chart myself instead of using a library since I only need two; which are lines and bars. I decided to make a smooth curved line and it wasn\u2019t since I never made a smooth curved line chart before. Thanks to "),$=r("a"),yt=s("this post"),_t=s(" that I found I was able to make the chart."),He=c(),q=r("h2"),te=r("a"),kt=s("History and Countdown"),Oe=c(),I=r("p"),Et=s("I used RxJS "),ce=r("code"),gt=s("interval"),St=s(" and "),de=r("code"),jt=s("timer"),xt=s(" for the countdown timer and just re-render every second. I used css transition for the top bar instead of re-rendering every time because I want it to animate smoothly when it gets shorter."),Je=c(),y=r("p"),Ct=s("For the game history, I just pushed an object to a Subject. I also have a "),fe=r("code"),Tt=s("currentRound"),Pt=s(" Subject that keeps getting updated by an "),me=r("code"),Rt=s("interval"),Wt=s(" Observable which tracks the current round."),$e=c(),M=r("h2"),ae=r("a"),At=s("Result Calculation"),qe=c(),oe=r("p"),Ht=s("The result is calculated from the correct answers, incorrect answers, the percentage of the correct answer, answers per round in average, and the standard deviation."),Me=c(),S=r("p"),Ot=s("I didn\u2019t know how to decide a smoother chart (consistent) is better than a jagged chart (inconsistent). Fortunately, people at "),D=r("a"),Jt=s("Teknologi Umum"),$t=s(" pointed me in the right direction, which was to find the standard deviation. It\u2019s just simple math, apparently. I was expecting something more involved but no, it\u2019s just a quick formula that could be done in less than a minute."),this.h()},l(e){h=l(e,"P",{});var o=p(h);m=l(o,"STRONG",{});var Mt=p(m);_=n(Mt,"Prawf"),Mt.forEach(t),j=n(o," is a Pauli Test simulation app made with Web Component and RxJS. You can find the reason why I made this in "),f=l(o,"A",{href:!0,rel:!0});var Dt=p(f);v=n(Dt,"the project repo"),Dt.forEach(t),o.forEach(t),x=d(e),C=l(e,"H2",{id:!0});var Ft=p(C);U=l(Ft,"A",{href:!0});var Ut=p(U);Le=n(Ut,"Web Component"),Ut.forEach(t),Ft.forEach(t),ve=d(e),z=l(e,"P",{});var zt=p(z);Ve=n(zt,"I chose Web Component because I want to try to experiment with it. I used it briefly in the past and I have no idea what I\u2019m doing so I want to try to use it again."),zt.forEach(t),be=d(e),T=l(e,"H2",{id:!0});var Lt=p(T);L=l(Lt,"A",{href:!0});var Vt=p(L);Ye=n(Vt,"Styling"),Vt.forEach(t),Lt.forEach(t),we=d(e),b=l(e,"P",{});var se=p(b);Be=n(se,"I was going to use "),P=l(se,"A",{href:!0,rel:!0});var Yt=p(P);Ge=n(Yt,"Tailwind"),Yt.forEach(t),Ne=n(se," but then I realised I use Web Component and I have no idea how to set it up. The second option is "),R=l(se,"A",{href:!0,rel:!0});var Bt=p(R);Ze=n(Bt,"Open Props"),Bt.forEach(t),Ke=n(se," but then I thought it\u2019s a bit overkill for what I\u2019m doing."),se.forEach(t),Ie=d(e),V=l(e,"P",{});var Gt=p(V);Qe=n(Gt,"Since I don\u2019t use Web Component that much, there are probably some questionable things that I\u2019ve done, and one of them is importing CSS as a string and then including it in the template."),Gt.forEach(t),ye=d(e),w=l(e,"P",{});var ne=p(w);Xe=n(ne,"I imported the css string using "),le=l(ne,"CODE",{});var Nt=p(le);et=n(Nt,"?inline"),Nt.forEach(t),tt=n(ne," directive from Vite to import a file as a string. The result is\u2026 there are quite a lot of unnecessary whitespaces which makes the final HTML bigger. I\u2019m sure I could "),pe=l(ne,"EM",{});var Zt=p(pe);at=n(Zt,"probably"),Zt.forEach(t),ot=n(ne," minify it, but it\u2019s fine for now."),ne.forEach(t),_e=d(e),Y=l(e,"P",{});var Kt=p(Y);st=n(Kt,"One of the things that I like from Web Component is component isolation; meaning that other component won\u2019t touch each other, they\u2019re isolated. This is good and bad, the good is I don\u2019t need to worry about accidentally touching other components, the bad is I duplicated a bunch of CSS because I couldn\u2019t use utility classes."),Kt.forEach(t),ke=d(e),B=l(e,"P",{});var Qt=p(B);nt=n(Qt,"Oh, I also added a darkmode with an animated toggle button because why not \u30C4 It isn\u2019t persisted, though."),Qt.forEach(t),Ee=d(e),W=l(e,"H2",{id:!0});var Xt=p(W);G=l(Xt,"A",{href:!0});var ea=p(G);it=n(ea,"Reactivity"),ea.forEach(t),Xt.forEach(t),ge=d(e),N=l(e,"P",{});var ta=p(N);rt=n(ta,"Making something Reactive is very easy thanks to RxJS. I don\u2019t think I struggle that much in this section. Again, I don\u2019t use RxJS that much so there is definitely room for improvement."),ta.forEach(t),Se=d(e),Z=l(e,"P",{});var aa=p(Z);lt=n(aa,"For example, I re-render the entire component instead of modifying the node that I changed because I feel re-rendering the entire thing is a lot simpler and I don\u2019t think it slows my app."),aa.forEach(t),je=d(e),A=l(e,"H2",{id:!0});var oa=p(A);K=l(oa,"A",{href:!0});var sa=p(K);pt=n(sa,"State Management"),sa.forEach(t),oa.forEach(t),xe=d(e),k=l(e,"P",{});var De=p(k);ut=n(De,"I use Svelte quite a bit, so I tried to make "),ue=l(De,"CODE",{});var na=p(ue);ht=n(na,"svelte/store"),na.forEach(t),ct=n(De,"-style state management using RxJS Subject. Here\u2019s an example."),De.forEach(t),Ce=d(e),H=l(e,"PRE",{class:!0});var xa=p(H);xa.forEach(t),Te=d(e),Q=l(e,"P",{});var ia=p(Q);dt=n(ia,"I use a variable to persist the last state because I couldn\u2019t find a way to \u201Cget\u201D the last value from RxJS Subject."),ia.forEach(t),Pe=d(e),O=l(e,"H2",{id:!0});var ra=p(O);X=l(ra,"A",{href:!0});var la=p(X);ft=n(la,"Routing"),la.forEach(t),ra.forEach(t),Re=d(e),E=l(e,"P",{});var Fe=p(E);mt=n(Fe,"I made a Subject to change the route. The way it works is actually pretty simple. Whenever I want to navigate to another page, I just need to emit a path as a string to the Subject and it will change the route using "),he=l(Fe,"CODE",{});var pa=p(he);vt=n(pa,"history.pushState"),pa.forEach(t),bt=n(Fe,"."),Fe.forEach(t),We=d(e),J=l(e,"H2",{id:!0});var ua=p(J);ee=l(ua,"A",{href:!0});var ha=p(ee);wt=n(ha,"Chart"),ha.forEach(t),ua.forEach(t),Ae=d(e),g=l(e,"P",{});var Ue=p(g);It=n(Ue,"I decided to build the chart myself instead of using a library since I only need two; which are lines and bars. I decided to make a smooth curved line and it wasn\u2019t since I never made a smooth curved line chart before. Thanks to "),$=l(Ue,"A",{href:!0,rel:!0});var ca=p($);yt=n(ca,"this post"),ca.forEach(t),_t=n(Ue," that I found I was able to make the chart."),Ue.forEach(t),He=d(e),q=l(e,"H2",{id:!0});var da=p(q);te=l(da,"A",{href:!0});var fa=p(te);kt=n(fa,"History and Countdown"),fa.forEach(t),da.forEach(t),Oe=d(e),I=l(e,"P",{});var ie=p(I);Et=n(ie,"I used RxJS "),ce=l(ie,"CODE",{});var ma=p(ce);gt=n(ma,"interval"),ma.forEach(t),St=n(ie," and "),de=l(ie,"CODE",{});var va=p(de);jt=n(va,"timer"),va.forEach(t),xt=n(ie," for the countdown timer and just re-render every second. I used css transition for the top bar instead of re-rendering every time because I want it to animate smoothly when it gets shorter."),ie.forEach(t),Je=d(e),y=l(e,"P",{});var re=p(y);Ct=n(re,"For the game history, I just pushed an object to a Subject. I also have a "),fe=l(re,"CODE",{});var ba=p(fe);Tt=n(ba,"currentRound"),ba.forEach(t),Pt=n(re," Subject that keeps getting updated by an "),me=l(re,"CODE",{});var wa=p(me);Rt=n(wa,"interval"),wa.forEach(t),Wt=n(re," Observable which tracks the current round."),re.forEach(t),$e=d(e),M=l(e,"H2",{id:!0});var Ia=p(M);ae=l(Ia,"A",{href:!0});var ya=p(ae);At=n(ya,"Result Calculation"),ya.forEach(t),Ia.forEach(t),qe=d(e),oe=l(e,"P",{});var _a=p(oe);Ht=n(_a,"The result is calculated from the correct answers, incorrect answers, the percentage of the correct answer, answers per round in average, and the standard deviation."),_a.forEach(t),Me=d(e),S=l(e,"P",{});var ze=p(S);Ot=n(ze,"I didn\u2019t know how to decide a smoother chart (consistent) is better than a jagged chart (inconsistent). Fortunately, people at "),D=l(ze,"A",{href:!0,rel:!0});var ka=p(D);Jt=n(ka,"Teknologi Umum"),ka.forEach(t),$t=n(ze," pointed me in the right direction, which was to find the standard deviation. It\u2019s just simple math, apparently. I was expecting something more involved but no, it\u2019s just a quick formula that could be done in less than a minute."),ze.forEach(t),this.h()},h(){u(f,"href","https://github.com/elianiva/prawf"),u(f,"rel","nofollow"),u(U,"href","#web-component"),u(C,"id","web-component"),u(L,"href","#styling"),u(T,"id","styling"),u(P,"href","https://tailwindcss.com/"),u(P,"rel","nofollow"),u(R,"href","https://open-props.style/"),u(R,"rel","nofollow"),u(G,"href","#reactivity"),u(W,"id","reactivity"),u(K,"href","#state-management"),u(A,"id","state-management"),u(H,"class","language-typescript"),u(X,"href","#routing"),u(O,"id","routing"),u(ee,"href","#chart"),u(J,"id","chart"),u($,"href","https://francoisromain.medium.com/smooth-a-svg-path-with-cubic-bezier-curves-e37b49d46c74"),u($,"rel","nofollow"),u(te,"href","#history-and-countdown"),u(q,"id","history-and-countdown"),u(ae,"href","#result-calculation"),u(M,"id","result-calculation"),u(D,"href","https://t.me/teknologi_umum"),u(D,"rel","nofollow")},m(e,o){i(e,h,o),a(h,m),a(m,_),a(h,j),a(h,f),a(f,v),i(e,x,o),i(e,C,o),a(C,U),a(U,Le),i(e,ve,o),i(e,z,o),a(z,Ve),i(e,be,o),i(e,T,o),a(T,L),a(L,Ye),i(e,we,o),i(e,b,o),a(b,Be),a(b,P),a(P,Ge),a(b,Ne),a(b,R),a(R,Ze),a(b,Ke),i(e,Ie,o),i(e,V,o),a(V,Qe),i(e,ye,o),i(e,w,o),a(w,Xe),a(w,le),a(le,et),a(w,tt),a(w,pe),a(pe,at),a(w,ot),i(e,_e,o),i(e,Y,o),a(Y,st),i(e,ke,o),i(e,B,o),a(B,nt),i(e,Ee,o),i(e,W,o),a(W,G),a(G,it),i(e,ge,o),i(e,N,o),a(N,rt),i(e,Se,o),i(e,Z,o),a(Z,lt),i(e,je,o),i(e,A,o),a(A,K),a(K,pt),i(e,xe,o),i(e,k,o),a(k,ut),a(k,ue),a(ue,ht),a(k,ct),i(e,Ce,o),i(e,H,o),H.innerHTML=ja,i(e,Te,o),i(e,Q,o),a(Q,dt),i(e,Pe,o),i(e,O,o),a(O,X),a(X,ft),i(e,Re,o),i(e,E,o),a(E,mt),a(E,he),a(he,vt),a(E,bt),i(e,We,o),i(e,J,o),a(J,ee),a(ee,wt),i(e,Ae,o),i(e,g,o),a(g,It),a(g,$),a($,yt),a(g,_t),i(e,He,o),i(e,q,o),a(q,te),a(te,kt),i(e,Oe,o),i(e,I,o),a(I,Et),a(I,ce),a(ce,gt),a(I,St),a(I,de),a(de,jt),a(I,xt),i(e,Je,o),i(e,y,o),a(y,Ct),a(y,fe),a(fe,Tt),a(y,Pt),a(y,me),a(me,Rt),a(y,Wt),i(e,$e,o),i(e,M,o),a(M,ae),a(ae,At),i(e,qe,o),i(e,oe,o),a(oe,Ht),i(e,Me,o),i(e,S,o),a(S,Ot),a(S,D),a(D,Jt),a(S,$t)},p:qa,d(e){e&&t(h),e&&t(x),e&&t(C),e&&t(ve),e&&t(z),e&&t(be),e&&t(T),e&&t(we),e&&t(b),e&&t(Ie),e&&t(V),e&&t(ye),e&&t(w),e&&t(_e),e&&t(Y),e&&t(ke),e&&t(B),e&&t(Ee),e&&t(W),e&&t(ge),e&&t(N),e&&t(Se),e&&t(Z),e&&t(je),e&&t(A),e&&t(xe),e&&t(k),e&&t(Ce),e&&t(H),e&&t(Te),e&&t(Q),e&&t(Pe),e&&t(O),e&&t(Re),e&&t(E),e&&t(We),e&&t(J),e&&t(Ae),e&&t(g),e&&t(He),e&&t(q),e&&t(Oe),e&&t(I),e&&t(Je),e&&t(y),e&&t($e),e&&t(M),e&&t(qe),e&&t(oe),e&&t(Me),e&&t(S)}}}function Fa(F){let h,m;const _=[F[0],Sa];let j={$$slots:{default:[Da]},$$scope:{ctx:F}};for(let f=0;f<_.length;f+=1)j=qt(j,_[f]);return h=new Ma({props:j}),{c(){Ra(h.$$.fragment)},l(f){Wa(h.$$.fragment,f)},m(f,v){Aa(h,f,v),m=!0},p(f,[v]){const x=v&1?Ha(_,[v&1&&Ea(f[0]),v&0&&Ea(Sa)]):{};v&2&&(x.$$scope={dirty:v,ctx:f}),h.$set(x)},i(f){m||(Oa(h.$$.fragment,f),m=!0)},o(f){Ja(h.$$.fragment,f),m=!1},d(f){$a(h,f)}}}const Sa={title:"Prawf",date:"2022-02-19T00:00:00.000Z",desc:"A Pauli Test Simulation app made with Web Component and RxJS",demo:"https://prawf.vercel.app",source:"https://github.com/elianiva/prawf",layout:"project",type:"personal",stack:[["Web Component","https://developer.mozilla.org/en-US/docs/Web/Web_Components"],["RxJS","https://rxjs.dev/"],["Typescript","https://www.typescriptlang.org/"]]};function Ua(F,h,m){return F.$$set=_=>{m(0,h=qt(qt({},h),ga(_)))},h=ga(h),[h]}class Na extends Ca{constructor(h){super();Ta(this,h,Ua,Fa,Pa,{})}}export{Na as default,Sa as metadata};
