import{S as Kt,i as Qt,s as Vt,C as vt,w as Mt,x as qt,y as zt,z as Zt,A as Wt,q as Bt,o as Xt,B as Jt,T as jt,e as i,t as a,k as d,c as n,a as r,h as s,d as o,m as u,b as _,a1 as eo,g as p,J as t,G as to}from"../../../chunks/vendor-4e826582.js";import{P as oo}from"../../../chunks/post-3ebb664d.js";import{C as ao}from"../../../chunks/CodeBlock-6dd74e5c.js";import"../../../chunks/stores-e638db0f.js";import"../../../chunks/Progress-16f77af8.js";/* empty css                                      */function so(C){let f,w=`<code class="language-batch"><span class="token operator">@</span><span class="token command"><span class="token keyword">ECHO</span> OFF</span>
<span class="token command"><span class="token keyword">SET</span> <span class="token parameter attr-name">/p</span> <span class="token variable">url</span><span class="token operator">=</span>Stream Link: </span>
<span class="token command"><span class="token keyword">SET</span> <span class="token parameter attr-name">/p</span> <span class="token variable">name</span><span class="token operator">=</span>Filename: </span>
<span class="token command"><span class="token keyword">ECHO</span> saving in downloads</span>
<span class="token command"><span class="token keyword">START</span> ffmpeg -protocol_whitelist file,http,https,tcp,tls,crypto <span class="token parameter attr-name">-i</span> <span class="token string">"%URL%"</span> -codec copy <span class="token string">"C:\\Users\\Frankie\\Downloads\\%name%.mkv"</span></span></code>`;return{c(){f=i("pre"),this.h()},l(h){f=n(h,"PRE",{class:!0});var k=r(f);k.forEach(o),this.h()},h(){_(f,"class","language-batch")},m(h,k){p(h,f,k),f.innerHTML=w},p:to,d(h){h&&o(f)}}}function lo(C){let f,w,h,k,m,y,c,Ce,M,xe,Fe,q,Ie,Te,z,$e,Pe,B,Oe,De,X,Se,Re,J,Le,Ae,se,S,Ne,le,R,L,wt,ie,A,Ue,ne,N,Ye,re,x,He,K,We,je,fe,F,Ge,P,Me,qe,pe,I,ze,O,Be,Xe,ce,b,Je,D,Ke,Qe,Q,Ve,Ze,me,U,et,he,T,de,E,tt,V,ot,at,Z,st,lt,ue,g,it,ee,nt,rt,te,ft,pt,ve,Y,ct,we,$,mt,oe,ht,dt,ye,H,ut,ke;return T=new ao({props:{filename:"streamDL.bat",lang:"batch",$$slots:{default:[so]},$$scope:{ctx:C}}}),{c(){f=i("p"),w=a("This is somewhat related to my "),h=i("a"),k=a("previous post"),m=a(" about downloading all of my SoundCloud liked songs. I have another batch file that I use to save livestreams. It doesn\u2019t work for YouTube livestreams and probably not Twitch either. Often news sites or other random sites will work."),y=d(),c=i("p"),Ce=a("Go to the stream and open your internet browser\u2019s developer tools - in Chrome, "),M=i("code"),xe=a("ctrl"),Fe=a(" + "),q=i("code"),Ie=a("shift"),Te=a(" + "),z=i("code"),$e=a("j"),Pe=a(". Click the \u201CNetwork\u201D tab. You can optionally filter to the \u201CFetch/XHR\u201D traffic as well. Now, refresh the page and click play on the video if necessary. You will hopefully find a file that ends in .m3u8. Common filenames are "),B=i("code"),Oe=a("index.m3u8"),De=a(", "),X=i("code"),Se=a("playlist.m3u8"),Re=a(", or "),J=i("code"),Le=a("manifest.m3u8"),Ae=a(". Sometimes the file extension is just .m3u."),se=d(),S=i("p"),Ne=a("This is a playlist file which contains a list of \u201Clinks\u201D to the most recent chunks of video from the livestream. Often it will contain 3-5 chunks, and gets updated every few seconds. If you click on the file once, then click on the \u201CResponse\u201D or \u201CPreview\u201D tab, you\u2019ll see the contents of the file. For Example:"),le=d(),R=i("p"),L=i("img"),ie=d(),A=i("p"),Ue=a("An m3u8 file"),ne=d(),N=i("p"),Ye=a("In this case, the individual video chunks are .ts files. Each chunk is 2 seconds long. The path to the files are relative, because they don\u2019t start with \u201Chttps\u201D or a valid URL. This is fine, but it means we can\u2019t simply download the .m3u8 and use it because these .ts files will not be found. We\u2019ll use a link to this m3u8 file instead."),re=d(),x=i("p"),He=a("Right click on the "),K=i("code"),We=a("index.m3u8"),je=a(" > Copy > Copy link address. Save this for later."),fe=d(),F=i("p"),Ge=a("We\u2019re going to make a batch file that takes an URL to an m3u8 file and saves a video, but first we\u2019ll need to have "),P=i("a"),Me=a("FFmpeg"),qe=a(" installed."),pe=d(),I=i("p"),ze=a("FFmpeg is another command line tool to convert videos and tons of "),O=i("a"),Be=a("other manipulation"),Xe=a(". It\u2019s free, very powerful, and used in almost every video conversion tool you\u2019ve ever used."),ce=d(),b=i("p"),Je=a("I\u2019m on Windows, so I downloaded the .exe. I would recommend putting it in your Path again. Instructions for that are at the bottom of my "),D=i("a"),Ke=a("SoundCloud post"),Qe=a(". Adding the folder with the ffmpeg.exe will allow you to run FFmpeg by typing "),Q=i("code"),Ve=a("ffmpeg"),Ze=a(" in the command line. It\u2019s possible the installation will add it to your path anyway, but you may need to restart your computer for it to take effect."),me=d(),U=i("p"),et=a("Next, we\u2019ll make the batch file. Make a new text file and add this inside of it:"),he=d(),Mt(T.$$.fragment),de=d(),E=i("p"),tt=a("You can change the path on the last line. The "),V=i("code"),ot=a("%name%"),at=a(" is a variable which comes from the prompt in line 3. I\u2019m saving as an "),Z=i("code"),st=a("mkv"),lt=a(" file, but you could change this to mp4 or something else; from what I recall, it may be faster to save as an mkv."),ue=d(),g=i("p"),it=a("Save that text file as a "),ee=i("code"),nt=a(".bat"),rt=a(" file, like "),te=i("code"),ft=a("streamDL.bat"),pt=a(". Now if you double-click it, it will as you to paste in the stream link that you copied before. Next add a filename - no file extension needed. Then it runs the ffmpeg command:"),ve=d(),Y=i("p"),ct=a("ffmpeg -protocol_whitelist file,http,https,tcp,tls,crypto -i \u201C%URL%\u201D -codec copy \u201CyourFilename.mkv\u201D"),we=d(),$=i("p"),mt=a("The important part here is the "),oe=i("code"),ht=a("-protocol_whitelist file,http,https,tcp,tls,crypto"),dt=a(" argument with lets FFmpeg read the .ts files using https or http."),ye=d(),H=i("p"),ut=a("FFmpeg will automatically keep checking the m3u8 file and get the new ts files while the stream is running. If you go to the downloaded video file, you can refresh windows explorer and see that the file size is increasing."),this.h()},l(e){f=n(e,"P",{});var l=r(f);w=s(l,"This is somewhat related to my "),h=n(l,"A",{href:!0,rel:!0});var ae=r(h);k=s(ae,"previous post"),ae.forEach(o),m=s(l," about downloading all of my SoundCloud liked songs. I have another batch file that I use to save livestreams. It doesn\u2019t work for YouTube livestreams and probably not Twitch either. Often news sites or other random sites will work."),l.forEach(o),y=u(e),c=n(e,"P",{});var v=r(c);Ce=s(v,"Go to the stream and open your internet browser\u2019s developer tools - in Chrome, "),M=n(v,"CODE",{});var yt=r(M);xe=s(yt,"ctrl"),yt.forEach(o),Fe=s(v," + "),q=n(v,"CODE",{});var kt=r(q);Ie=s(kt,"shift"),kt.forEach(o),Te=s(v," + "),z=n(v,"CODE",{});var _t=r(z);$e=s(_t,"j"),_t.forEach(o),Pe=s(v,". Click the \u201CNetwork\u201D tab. You can optionally filter to the \u201CFetch/XHR\u201D traffic as well. Now, refresh the page and click play on the video if necessary. You will hopefully find a file that ends in .m3u8. Common filenames are "),B=n(v,"CODE",{});var bt=r(B);Oe=s(bt,"index.m3u8"),bt.forEach(o),De=s(v,", "),X=n(v,"CODE",{});var Et=r(X);Se=s(Et,"playlist.m3u8"),Et.forEach(o),Re=s(v,", or "),J=n(v,"CODE",{});var gt=r(J);Le=s(gt,"manifest.m3u8"),gt.forEach(o),Ae=s(v,". Sometimes the file extension is just .m3u."),v.forEach(o),se=u(e),S=n(e,"P",{});var Ct=r(S);Ne=s(Ct,"This is a playlist file which contains a list of \u201Clinks\u201D to the most recent chunks of video from the livestream. Often it will contain 3-5 chunks, and gets updated every few seconds. If you click on the file once, then click on the \u201CResponse\u201D or \u201CPreview\u201D tab, you\u2019ll see the contents of the file. For Example:"),Ct.forEach(o),le=u(e),R=n(e,"P",{});var xt=r(R);L=n(xt,"IMG",{src:!0,alt:!0}),xt.forEach(o),ie=u(e),A=n(e,"P",{});var Ft=r(A);Ue=s(Ft,"An m3u8 file"),Ft.forEach(o),ne=u(e),N=n(e,"P",{});var It=r(N);Ye=s(It,"In this case, the individual video chunks are .ts files. Each chunk is 2 seconds long. The path to the files are relative, because they don\u2019t start with \u201Chttps\u201D or a valid URL. This is fine, but it means we can\u2019t simply download the .m3u8 and use it because these .ts files will not be found. We\u2019ll use a link to this m3u8 file instead."),It.forEach(o),re=u(e),x=n(e,"P",{});var _e=r(x);He=s(_e,"Right click on the "),K=n(_e,"CODE",{});var Tt=r(K);We=s(Tt,"index.m3u8"),Tt.forEach(o),je=s(_e," > Copy > Copy link address. Save this for later."),_e.forEach(o),fe=u(e),F=n(e,"P",{});var be=r(F);Ge=s(be,"We\u2019re going to make a batch file that takes an URL to an m3u8 file and saves a video, but first we\u2019ll need to have "),P=n(be,"A",{href:!0,rel:!0});var $t=r(P);Me=s($t,"FFmpeg"),$t.forEach(o),qe=s(be," installed."),be.forEach(o),pe=u(e),I=n(e,"P",{});var Ee=r(I);ze=s(Ee,"FFmpeg is another command line tool to convert videos and tons of "),O=n(Ee,"A",{href:!0,rel:!0});var Pt=r(O);Be=s(Pt,"other manipulation"),Pt.forEach(o),Xe=s(Ee,". It\u2019s free, very powerful, and used in almost every video conversion tool you\u2019ve ever used."),Ee.forEach(o),ce=u(e),b=n(e,"P",{});var W=r(b);Je=s(W,"I\u2019m on Windows, so I downloaded the .exe. I would recommend putting it in your Path again. Instructions for that are at the bottom of my "),D=n(W,"A",{href:!0,rel:!0});var Ot=r(D);Ke=s(Ot,"SoundCloud post"),Ot.forEach(o),Qe=s(W,". Adding the folder with the ffmpeg.exe will allow you to run FFmpeg by typing "),Q=n(W,"CODE",{});var Dt=r(Q);Ve=s(Dt,"ffmpeg"),Dt.forEach(o),Ze=s(W," in the command line. It\u2019s possible the installation will add it to your path anyway, but you may need to restart your computer for it to take effect."),W.forEach(o),me=u(e),U=n(e,"P",{});var St=r(U);et=s(St,"Next, we\u2019ll make the batch file. Make a new text file and add this inside of it:"),St.forEach(o),he=u(e),qt(T.$$.fragment,e),de=u(e),E=n(e,"P",{});var j=r(E);tt=s(j,"You can change the path on the last line. The "),V=n(j,"CODE",{});var Rt=r(V);ot=s(Rt,"%name%"),Rt.forEach(o),at=s(j," is a variable which comes from the prompt in line 3. I\u2019m saving as an "),Z=n(j,"CODE",{});var Lt=r(Z);st=s(Lt,"mkv"),Lt.forEach(o),lt=s(j," file, but you could change this to mp4 or something else; from what I recall, it may be faster to save as an mkv."),j.forEach(o),ue=u(e),g=n(e,"P",{});var G=r(g);it=s(G,"Save that text file as a "),ee=n(G,"CODE",{});var At=r(ee);nt=s(At,".bat"),At.forEach(o),rt=s(G," file, like "),te=n(G,"CODE",{});var Nt=r(te);ft=s(Nt,"streamDL.bat"),Nt.forEach(o),pt=s(G,". Now if you double-click it, it will as you to paste in the stream link that you copied before. Next add a filename - no file extension needed. Then it runs the ffmpeg command:"),G.forEach(o),ve=u(e),Y=n(e,"P",{});var Ut=r(Y);ct=s(Ut,"ffmpeg -protocol_whitelist file,http,https,tcp,tls,crypto -i \u201C%URL%\u201D -codec copy \u201CyourFilename.mkv\u201D"),Ut.forEach(o),we=u(e),$=n(e,"P",{});var ge=r($);mt=s(ge,"The important part here is the "),oe=n(ge,"CODE",{});var Yt=r(oe);ht=s(Yt,"-protocol_whitelist file,http,https,tcp,tls,crypto"),Yt.forEach(o),dt=s(ge," argument with lets FFmpeg read the .ts files using https or http."),ge.forEach(o),ye=u(e),H=n(e,"P",{});var Ht=r(H);ut=s(Ht,"FFmpeg will automatically keep checking the m3u8 file and get the new ts files while the stream is running. If you go to the downloaded video file, you can refresh windows explorer and see that the file size is increasing."),Ht.forEach(o),this.h()},h(){_(h,"href","https://blog.ihtfy.com/post/soundcloud-likes/"),_(h,"rel","nofollow"),eo(L.src,wt="/assets/post/livestreams/m3u8-snapshot.png")||_(L,"src",wt),_(L,"alt","network"),_(P,"href","https://ffmpeg.org/download.html"),_(P,"rel","nofollow"),_(O,"href","https://ffmpeg.org/about.html"),_(O,"rel","nofollow"),_(D,"href","https://blog.ihtfy.com/post/soundcloud-likes/"),_(D,"rel","nofollow")},m(e,l){p(e,f,l),t(f,w),t(f,h),t(h,k),t(f,m),p(e,y,l),p(e,c,l),t(c,Ce),t(c,M),t(M,xe),t(c,Fe),t(c,q),t(q,Ie),t(c,Te),t(c,z),t(z,$e),t(c,Pe),t(c,B),t(B,Oe),t(c,De),t(c,X),t(X,Se),t(c,Re),t(c,J),t(J,Le),t(c,Ae),p(e,se,l),p(e,S,l),t(S,Ne),p(e,le,l),p(e,R,l),t(R,L),p(e,ie,l),p(e,A,l),t(A,Ue),p(e,ne,l),p(e,N,l),t(N,Ye),p(e,re,l),p(e,x,l),t(x,He),t(x,K),t(K,We),t(x,je),p(e,fe,l),p(e,F,l),t(F,Ge),t(F,P),t(P,Me),t(F,qe),p(e,pe,l),p(e,I,l),t(I,ze),t(I,O),t(O,Be),t(I,Xe),p(e,ce,l),p(e,b,l),t(b,Je),t(b,D),t(D,Ke),t(b,Qe),t(b,Q),t(Q,Ve),t(b,Ze),p(e,me,l),p(e,U,l),t(U,et),p(e,he,l),zt(T,e,l),p(e,de,l),p(e,E,l),t(E,tt),t(E,V),t(V,ot),t(E,at),t(E,Z),t(Z,st),t(E,lt),p(e,ue,l),p(e,g,l),t(g,it),t(g,ee),t(ee,nt),t(g,rt),t(g,te),t(te,ft),t(g,pt),p(e,ve,l),p(e,Y,l),t(Y,ct),p(e,we,l),p(e,$,l),t($,mt),t($,oe),t(oe,ht),t($,dt),p(e,ye,l),p(e,H,l),t(H,ut),ke=!0},p(e,l){const ae={};l&2&&(ae.$$scope={dirty:l,ctx:e}),T.$set(ae)},i(e){ke||(Bt(T.$$.fragment,e),ke=!0)},o(e){Xt(T.$$.fragment,e),ke=!1},d(e){e&&o(f),e&&o(y),e&&o(c),e&&o(se),e&&o(S),e&&o(le),e&&o(R),e&&o(ie),e&&o(A),e&&o(ne),e&&o(N),e&&o(re),e&&o(x),e&&o(fe),e&&o(F),e&&o(pe),e&&o(I),e&&o(ce),e&&o(b),e&&o(me),e&&o(U),e&&o(he),Jt(T,e),e&&o(de),e&&o(E),e&&o(ue),e&&o(g),e&&o(ve),e&&o(Y),e&&o(we),e&&o($),e&&o(ye),e&&o(H)}}}function io(C){let f,w;const h=[C[0],Gt];let k={$$slots:{default:[lo]},$$scope:{ctx:C}};for(let m=0;m<h.length;m+=1)k=vt(k,h[m]);return f=new oo({props:k}),{c(){Mt(f.$$.fragment)},l(m){qt(f.$$.fragment,m)},m(m,y){zt(f,m,y),w=!0},p(m,[y]){const c=y&1?Zt(h,[y&1&&Wt(m[0]),y&0&&Wt(Gt)]):{};y&2&&(c.$$scope={dirty:y,ctx:m}),f.$set(c)},i(m){w||(Bt(f.$$.fragment,m),w=!0)},o(m){Xt(f.$$.fragment,m),w=!1},d(m){Jt(f,m)}}}const Gt={draft:!1,title:"livestreams",date:"2022-02-03",desc:"How to save livestreams",tags:["code","tutorial"]};function no(C,f,w){return C.$$set=h=>{w(0,f=vt(vt({},f),jt(h)))},f=jt(f),[f]}class uo extends Kt{constructor(f){super();Qt(this,f,no,io,Vt,{})}}export{uo as default,Gt as metadata};
