import{S as Eo,i as qo,s as yo,C as bt,w as io,x as ro,y as no,z as ko,A as uo,q as fo,o as ho,B as co,U as po,e as s,t as n,k as p,c as l,a,h as u,d as t,m,b as f,g as r,F as o}from"../../../chunks/vendor-a3554607.js";import{P as bo}from"../../../chunks/post-1875198a.js";import{U as Co}from"../../../chunks/Update-e4617bdb.js";import"../../../chunks/stores-5109c37e.js";import"../../../chunks/Progress-912bc64e.js";import"../../../chunks/theme-4e4001f1.js";/* empty css                                      *//* empty css                                                           */function Po(y){let h,v,_,w,c;return{c(){h=s("p"),v=n("In the midst of lua hype, I found "),_=s("a"),w=n("this plugin"),c=n(` which doesn\u2019t depend on coc.nvim
It has a similar JSON output which is nice`),this.h()},l(d){h=l(d,"P",{});var I=a(h);v=u(I,"In the midst of lua hype, I found "),_=l(I,"A",{href:!0,rel:!0});var E=a(_);w=u(E,"this plugin"),E.forEach(t),c=u(I,` which doesn\u2019t depend on coc.nvim
It has a similar JSON output which is nice`),I.forEach(t),this.h()},h(){f(_,"href","https://github.com/NTBBloodbath/rest.nvim"),f(_,"rel","nofollow")},m(d,I){r(d,h,I),o(h,v),o(h,_),o(_,w),o(h,c)},d(d){d&&t(h)}}}function To(y){let h,v,_,w,c,d,I,E,Me,Ve,$,ie,W,Be,De,q,re,G,We,Ge,ne,J,Je,ze,ue,z,Ye,Ze,fe,he,Y,Fe,me,g,Z,Ke,de,k,Xe,R,Qe,et,ve,F,tt,_e,S,K,ot,Ie,H,X,st,we,b,lt,j,at,it,Ee,L,Q,rt,qe,C,nt,U,ut,ft,ye,O,ee,ht,ke,P,ct,N,pt,mt,be,T,dt,M,vt,_t,Ce,V,vo=`<code class="language-undefined">POST http://localhost:3000/api/user/register HTTP/1.1
Content-Type: application/json

&#123;
  &quot;username&quot;: &quot;coolguy32&quot;,
  &quot;email&quot;: &quot;im@coolguy.me&quot;,
  &quot;password&quot;: &quot;superstronkpassword&quot;
&#125;</code>`,Pe,A,It,ce,wt,Et,Te,B,_o=`<code class="language-undefined">&#123;
  &quot;Status&quot;: 200,
  &quot;Message&quot;: &quot;OK&quot;
&#125;

&#123;
  &quot;X-Powered-By&quot;: &quot;Express&quot;,
  &quot;Content-Type&quot;: &quot;application/json; charset=utf-8&quot;,
  &quot;Content-Length&quot;: &quot;56&quot;,
  &quot;ETag&quot;: &quot;W/&quot;38-Eu4y++fOI89s+z200P0DrHLf1ZE&quot;&quot;,
  &quot;Date&quot;: &quot;Thu, 16 Jul 2020 14:35:10 GMT&quot;,
  &quot;Connection&quot;: &quot;close&quot;
&#125;

&#123;
  &quot;msg&quot;: &quot;User 5f10659e630bfa40702160e9 has been created&quot;
&#125;</code>`,Ae,te,qt,xe,x,$e,D,oe,yt,ge,se,kt,Re;return x=new Co({props:{date:"2021-04-19",$$slots:{default:[Po]},$$scope:{ctx:y}}}),{c(){h=s("h1"),v=s("a"),_=n("Table of Contents"),w=p(),c=s("ul"),d=s("li"),I=s("p"),E=s("a"),Me=n("Introduction"),Ve=p(),$=s("li"),ie=s("p"),W=s("a"),Be=n("Rest Clients"),De=p(),q=s("ul"),re=s("li"),G=s("a"),We=n("Vim HTTP"),Ge=p(),ne=s("li"),J=s("a"),Je=n("Vim Rest Console"),ze=p(),ue=s("li"),z=s("a"),Ye=n("COC Rest Client"),Ze=p(),fe=s("li"),he=s("p"),Y=s("a"),Fe=n("Conclusion"),me=p(),g=s("h1"),Z=s("a"),Ke=n("Introduction"),de=p(),k=s("p"),Xe=n("I\u2019ve been learning backend web development stuff lately to create an API and whatnot. We all know that a popular REST client to test API is "),R=s("a"),Qe=n("Postman"),et=n(". I like it but it is using Electron which means that it is quite heavy. Well, to be honest it is not that heavy but if I can save more RAM then why won\u2019t I find an alternative for it."),ve=p(),F=s("p"),tt=n("I found a really cool extension on vscode where you just need a file with the specified syntax to make a request. You might know that I use Neovim as my main editor, so I\u2019m pretty sure there\u2019s a few that works like this. Guess what, there is."),_e=p(),S=s("h1"),K=s("a"),ot=n("Rest Clients"),Ie=p(),H=s("h2"),X=s("a"),st=n("Vim HTTP"),we=p(),b=s("p"),lt=n("I came across this nice plugin called "),j=s("a"),at=n("vim-http"),it=n(". I like how it works, it has syntax highlighting for .http file which is basically a temporary file that you use to make a request. But the drawback to me is that it doesn\u2019t format json response. So I have to format it through the API which I don\u2019t like. So in the end, I try to find another restclient."),Ee=p(),L=s("h2"),Q=s("a"),rt=n("Vim Rest Console"),qe=p(),C=s("p"),nt=n("I found this plugin called "),U=s("a"),ut=n("vim-rest-console"),ft=n(", but when I look at its syntax, I don\u2019t quite like it. So I never tried it in the end."),ye=p(),O=s("h2"),ee=s("a"),ht=n("COC Rest Client"),ke=p(),P=s("p"),ct=n("I\u2019m using a plugin called coc.nvim, and it usually has a lot of stuff. So I checked if there\u2019s any for coc, turns out, there is. It\u2019s called "),N=s("a"),pt=n("coc-restclient"),mt=n("."),be=p(),T=s("p"),dt=n("Since most of coc plugins comes from vscode, this particular plugin works similar like the "),M=s("a"),vt=n("one that vscode has"),_t=n(". Here\u2019s an example."),Ce=p(),V=s("pre"),Pe=p(),A=s("p"),It=n("The great thing about this plugin is that, it gives the response in a json formatted file which is what I was looking for. Here\u2019s an example of the response after running "),ce=s("code"),wt=n(":CocCommand rest-client.request"),Et=n("."),Te=p(),B=s("pre"),Ae=p(),te=s("p"),qt=n("Please refer to the repository for installation or configuration because they explain it really well, there\u2019s no point of me explaining it here :D"),xe=p(),io(x.$$.fragment),$e=p(),D=s("h1"),oe=s("a"),yt=n("Conclusion"),ge=p(),se=s("p"),kt=n("I\u2019m glad I found this plugin because I am no longer need postman. I might need it for more advanced feature, but for now, simple rest client is fine. I don\u2019t have to leave my terminal and go to a separate program for that which is awesome. My current setup is having 3 tmux panes, 1 for Neovim, 1 for running the server and stuff, 1 for the rest client."),this.h()},l(e){h=l(e,"H1",{id:!0});var i=a(h);v=l(i,"A",{href:!0});var pe=a(v);_=u(pe,"Table of Contents"),pe.forEach(t),i.forEach(t),w=m(e),c=l(e,"UL",{});var le=a(c);d=l(le,"LI",{});var Ct=a(d);I=l(Ct,"P",{});var Pt=a(I);E=l(Pt,"A",{href:!0});var Tt=a(E);Me=u(Tt,"Introduction"),Tt.forEach(t),Pt.forEach(t),Ct.forEach(t),Ve=m(le),$=l(le,"LI",{});var Se=a($);ie=l(Se,"P",{});var At=a(ie);W=l(At,"A",{href:!0});var xt=a(W);Be=u(xt,"Rest Clients"),xt.forEach(t),At.forEach(t),De=m(Se),q=l(Se,"UL",{});var ae=a(q);re=l(ae,"LI",{});var $t=a(re);G=l($t,"A",{href:!0});var gt=a(G);We=u(gt,"Vim HTTP"),gt.forEach(t),$t.forEach(t),Ge=m(ae),ne=l(ae,"LI",{});var Rt=a(ne);J=l(Rt,"A",{href:!0});var St=a(J);Je=u(St,"Vim Rest Console"),St.forEach(t),Rt.forEach(t),ze=m(ae),ue=l(ae,"LI",{});var Ht=a(ue);z=l(Ht,"A",{href:!0});var jt=a(z);Ye=u(jt,"COC Rest Client"),jt.forEach(t),Ht.forEach(t),ae.forEach(t),Se.forEach(t),Ze=m(le),fe=l(le,"LI",{});var Lt=a(fe);he=l(Lt,"P",{});var Ut=a(he);Y=l(Ut,"A",{href:!0});var Ot=a(Y);Fe=u(Ot,"Conclusion"),Ot.forEach(t),Ut.forEach(t),Lt.forEach(t),le.forEach(t),me=m(e),g=l(e,"H1",{id:!0});var Nt=a(g);Z=l(Nt,"A",{href:!0});var Mt=a(Z);Ke=u(Mt,"Introduction"),Mt.forEach(t),Nt.forEach(t),de=m(e),k=l(e,"P",{});var He=a(k);Xe=u(He,"I\u2019ve been learning backend web development stuff lately to create an API and whatnot. We all know that a popular REST client to test API is "),R=l(He,"A",{href:!0,rel:!0});var Vt=a(R);Qe=u(Vt,"Postman"),Vt.forEach(t),et=u(He,". I like it but it is using Electron which means that it is quite heavy. Well, to be honest it is not that heavy but if I can save more RAM then why won\u2019t I find an alternative for it."),He.forEach(t),ve=m(e),F=l(e,"P",{});var Bt=a(F);tt=u(Bt,"I found a really cool extension on vscode where you just need a file with the specified syntax to make a request. You might know that I use Neovim as my main editor, so I\u2019m pretty sure there\u2019s a few that works like this. Guess what, there is."),Bt.forEach(t),_e=m(e),S=l(e,"H1",{id:!0});var Dt=a(S);K=l(Dt,"A",{href:!0});var Wt=a(K);ot=u(Wt,"Rest Clients"),Wt.forEach(t),Dt.forEach(t),Ie=m(e),H=l(e,"H2",{id:!0});var Gt=a(H);X=l(Gt,"A",{href:!0});var Jt=a(X);st=u(Jt,"Vim HTTP"),Jt.forEach(t),Gt.forEach(t),we=m(e),b=l(e,"P",{});var je=a(b);lt=u(je,"I came across this nice plugin called "),j=l(je,"A",{href:!0,rel:!0});var zt=a(j);at=u(zt,"vim-http"),zt.forEach(t),it=u(je,". I like how it works, it has syntax highlighting for .http file which is basically a temporary file that you use to make a request. But the drawback to me is that it doesn\u2019t format json response. So I have to format it through the API which I don\u2019t like. So in the end, I try to find another restclient."),je.forEach(t),Ee=m(e),L=l(e,"H2",{id:!0});var Yt=a(L);Q=l(Yt,"A",{href:!0});var Zt=a(Q);rt=u(Zt,"Vim Rest Console"),Zt.forEach(t),Yt.forEach(t),qe=m(e),C=l(e,"P",{});var Le=a(C);nt=u(Le,"I found this plugin called "),U=l(Le,"A",{href:!0,rel:!0});var Ft=a(U);ut=u(Ft,"vim-rest-console"),Ft.forEach(t),ft=u(Le,", but when I look at its syntax, I don\u2019t quite like it. So I never tried it in the end."),Le.forEach(t),ye=m(e),O=l(e,"H2",{id:!0});var Kt=a(O);ee=l(Kt,"A",{href:!0});var Xt=a(ee);ht=u(Xt,"COC Rest Client"),Xt.forEach(t),Kt.forEach(t),ke=m(e),P=l(e,"P",{});var Ue=a(P);ct=u(Ue,"I\u2019m using a plugin called coc.nvim, and it usually has a lot of stuff. So I checked if there\u2019s any for coc, turns out, there is. It\u2019s called "),N=l(Ue,"A",{href:!0,rel:!0});var Qt=a(N);pt=u(Qt,"coc-restclient"),Qt.forEach(t),mt=u(Ue,"."),Ue.forEach(t),be=m(e),T=l(e,"P",{});var Oe=a(T);dt=u(Oe,"Since most of coc plugins comes from vscode, this particular plugin works similar like the "),M=l(Oe,"A",{href:!0,rel:!0});var eo=a(M);vt=u(eo,"one that vscode has"),eo.forEach(t),_t=u(Oe,". Here\u2019s an example."),Oe.forEach(t),Ce=m(e),V=l(e,"PRE",{class:!0});var Io=a(V);Io.forEach(t),Pe=m(e),A=l(e,"P",{});var Ne=a(A);It=u(Ne,"The great thing about this plugin is that, it gives the response in a json formatted file which is what I was looking for. Here\u2019s an example of the response after running "),ce=l(Ne,"CODE",{});var to=a(ce);wt=u(to,":CocCommand rest-client.request"),to.forEach(t),Et=u(Ne,"."),Ne.forEach(t),Te=m(e),B=l(e,"PRE",{class:!0});var wo=a(B);wo.forEach(t),Ae=m(e),te=l(e,"P",{});var oo=a(te);qt=u(oo,"Please refer to the repository for installation or configuration because they explain it really well, there\u2019s no point of me explaining it here :D"),oo.forEach(t),xe=m(e),ro(x.$$.fragment,e),$e=m(e),D=l(e,"H1",{id:!0});var so=a(D);oe=l(so,"A",{href:!0});var lo=a(oe);yt=u(lo,"Conclusion"),lo.forEach(t),so.forEach(t),ge=m(e),se=l(e,"P",{});var ao=a(se);kt=u(ao,"I\u2019m glad I found this plugin because I am no longer need postman. I might need it for more advanced feature, but for now, simple rest client is fine. I don\u2019t have to leave my terminal and go to a separate program for that which is awesome. My current setup is having 3 tmux panes, 1 for Neovim, 1 for running the server and stuff, 1 for the rest client."),ao.forEach(t),this.h()},h(){f(v,"href","#table-of-contents"),f(h,"id","table-of-contents"),f(E,"href","#introduction"),f(W,"href","#rest-clients"),f(G,"href","#vim-http"),f(J,"href","#vim-rest-console"),f(z,"href","#coc-rest-client"),f(Y,"href","#conclusion"),f(Z,"href","#introduction"),f(g,"id","introduction"),f(R,"href","https://postman.com"),f(R,"rel","nofollow"),f(K,"href","#rest-clients"),f(S,"id","rest-clients"),f(X,"href","#vim-http"),f(H,"id","vim-http"),f(j,"href","https://github.com/nicwest/vim-http"),f(j,"rel","nofollow"),f(Q,"href","#vim-rest-console"),f(L,"id","vim-rest-console"),f(U,"href","https://github.com/diepm/vim-rest-console"),f(U,"rel","nofollow"),f(ee,"href","#coc-rest-client"),f(O,"id","coc-rest-client"),f(N,"href","https://github.com/pr4th4m/coc-restclient"),f(N,"rel","nofollow"),f(M,"href","https://marketplace.visualstudio.com/items?itemName=humao.rest-client"),f(M,"rel","nofollow"),f(V,"class","language-undefined"),f(B,"class","language-undefined"),f(oe,"href","#conclusion"),f(D,"id","conclusion")},m(e,i){r(e,h,i),o(h,v),o(v,_),r(e,w,i),r(e,c,i),o(c,d),o(d,I),o(I,E),o(E,Me),o(c,Ve),o(c,$),o($,ie),o(ie,W),o(W,Be),o($,De),o($,q),o(q,re),o(re,G),o(G,We),o(q,Ge),o(q,ne),o(ne,J),o(J,Je),o(q,ze),o(q,ue),o(ue,z),o(z,Ye),o(c,Ze),o(c,fe),o(fe,he),o(he,Y),o(Y,Fe),r(e,me,i),r(e,g,i),o(g,Z),o(Z,Ke),r(e,de,i),r(e,k,i),o(k,Xe),o(k,R),o(R,Qe),o(k,et),r(e,ve,i),r(e,F,i),o(F,tt),r(e,_e,i),r(e,S,i),o(S,K),o(K,ot),r(e,Ie,i),r(e,H,i),o(H,X),o(X,st),r(e,we,i),r(e,b,i),o(b,lt),o(b,j),o(j,at),o(b,it),r(e,Ee,i),r(e,L,i),o(L,Q),o(Q,rt),r(e,qe,i),r(e,C,i),o(C,nt),o(C,U),o(U,ut),o(C,ft),r(e,ye,i),r(e,O,i),o(O,ee),o(ee,ht),r(e,ke,i),r(e,P,i),o(P,ct),o(P,N),o(N,pt),o(P,mt),r(e,be,i),r(e,T,i),o(T,dt),o(T,M),o(M,vt),o(T,_t),r(e,Ce,i),r(e,V,i),V.innerHTML=vo,r(e,Pe,i),r(e,A,i),o(A,It),o(A,ce),o(ce,wt),o(A,Et),r(e,Te,i),r(e,B,i),B.innerHTML=_o,r(e,Ae,i),r(e,te,i),o(te,qt),r(e,xe,i),no(x,e,i),r(e,$e,i),r(e,D,i),o(D,oe),o(oe,yt),r(e,ge,i),r(e,se,i),o(se,kt),Re=!0},p(e,i){const pe={};i&2&&(pe.$$scope={dirty:i,ctx:e}),x.$set(pe)},i(e){Re||(fo(x.$$.fragment,e),Re=!0)},o(e){ho(x.$$.fragment,e),Re=!1},d(e){e&&t(h),e&&t(w),e&&t(c),e&&t(me),e&&t(g),e&&t(de),e&&t(k),e&&t(ve),e&&t(F),e&&t(_e),e&&t(S),e&&t(Ie),e&&t(H),e&&t(we),e&&t(b),e&&t(Ee),e&&t(L),e&&t(qe),e&&t(C),e&&t(ye),e&&t(O),e&&t(ke),e&&t(P),e&&t(be),e&&t(T),e&&t(Ce),e&&t(V),e&&t(Pe),e&&t(A),e&&t(Te),e&&t(B),e&&t(Ae),e&&t(te),e&&t(xe),co(x,e),e&&t($e),e&&t(D),e&&t(ge),e&&t(se)}}}function Ao(y){let h,v;const _=[y[0],mo];let w={$$slots:{default:[To]},$$scope:{ctx:y}};for(let c=0;c<_.length;c+=1)w=bt(w,_[c]);return h=new bo({props:w}),{c(){io(h.$$.fragment)},l(c){ro(h.$$.fragment,c)},m(c,d){no(h,c,d),v=!0},p(c,[d]){const I=d&1?ko(_,[d&1&&uo(c[0]),d&0&&uo(mo)]):{};d&2&&(I.$$scope={dirty:d,ctx:c}),h.$set(I)},i(c){v||(fo(h.$$.fragment,c),v=!0)},o(c){ho(h.$$.fragment,c),v=!1},d(c){co(h,c)}}}const mo={draft:!1,title:"Simple TUI-based Rest Client for (Neo)vim",date:"2020-07-16T00:00:00.000Z",desc:"A post where I try to find a TUI alternative to Postman. In other word, REST client but in TUI",tags:["neovim"]};function xo(y,h,v){return y.$$set=_=>{v(0,h=bt(bt({},h),po(_)))},h=po(h),[h]}class Oo extends Eo{constructor(h){super();qo(this,h,xo,Ao,yo,{})}}export{Oo as default,mo as metadata};
