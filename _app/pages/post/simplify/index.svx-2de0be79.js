import{S as ct,i as mt,s as dt,C as F,w as K,x as Q,y as X,z as ft,A as lt,q as Y,o as Z,B as tt,T as pt,e as _,t as f,k as v,H as it,c as w,a as c,h,d as a,m as g,I as rt,b as $,g as o,J as u,G as ht}from"../../../chunks/vendor-4e826582.js";import{P as kt}from"../../../chunks/post-3ebb664d.js";import{C as vt}from"../../../chunks/CodeBlock-6dd74e5c.js";import{U as gt}from"../../../chunks/Update-b29be43a.js";import"../../../chunks/stores-e638db0f.js";import"../../../chunks/Progress-16f77af8.js";/* empty css                                      */function _t(m){let s,l=`<code class="language-svg"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>
  <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 14 14<span class="token punctuation">"</span></span>
<span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
    <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M4 2l8 5l0 6l-10-12l10 0l-10 12l0-6l8-5<span class="token punctuation">"</span></span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#21326D<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.7<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-linecap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>round<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-linejoin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>round<span class="token punctuation">"</span></span>
  <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code>`;return{c(){s=_("pre"),this.h()},l(p){s=w(p,"PRE",{class:!0});var i=c(s);i.forEach(a),this.h()},h(){$(s,"class","language-svg")},m(p,i){o(p,s,i),s.innerHTML=l},p:ht,d(p){p&&a(s)}}}function wt(m){let s;return{c(){s=f("Not on WordPress anymore :)")},l(l){s=h(l,"Not on WordPress anymore :)")},m(l,p){o(l,s,p)},d(l){l&&a(s)}}}function $t(m){let s,l,p,i,n,r,k,H,C,I,G,x,U,T,J,L,N,P,O,S,E,R,W,q,V,z,y,A,b,d,D;return I=new vt({props:{filename:"logo.svg",lang:"svg",$$slots:{default:[_t]},$$scope:{ctx:m}}}),y=new gt({props:{date:"2022-02-24",$$slots:{default:[wt]},$$scope:{ctx:m}}}),{c(){s=_("p"),l=f("I simplified my logo a bit. It looks pretty much the same, but the underlying svg is much smaller."),p=v(),i=_("p"),n=f("I originally made the logo in Adobe Illustrator. I made the original path, then expanded it, then filled it in, then hid the original path. This left the svg with some unnecessary information."),r=v(),k=_("p"),H=f("I wrote the new version by hand. It\u2019s just a path with a stroke width and rounded joints and ends like you\u2019d expect."),C=v(),K(I.$$.fragment),G=v(),x=_("p"),U=f("The "),T=_("code"),J=f("viewBox"),L=f(" is like the canvas; it goes from (0, 0) to (14, 14). The actual path is a bit smaller, but I have to accommodate for the stroke width. I also gave some extra margin on the sides to make it a square, since I\u2019m using this as a favicon and logo."),N=v(),P=_("p"),O=f("It starts at the coordinate (4, 2), then draws a line segment that\u2019s right 8 units and down 5 units. Then it goes straight down for 6 units, and so on."),S=v(),E=_("p"),R=f("I used Illustrator to export the image as different sized PNGs - ranging from 16 to 2048 pixels wide."),W=v(),q=_("p"),V=f("I tried to add the svg to this post, but WordPress doesn\u2019t let me do that - very lame."),z=v(),K(y.$$.fragment),A=v(),b=it("svg"),d=it("path"),this.h()},l(t){s=w(t,"P",{});var e=c(s);l=h(e,"I simplified my logo a bit. It looks pretty much the same, but the underlying svg is much smaller."),e.forEach(a),p=g(t),i=w(t,"P",{});var j=c(i);n=h(j,"I originally made the logo in Adobe Illustrator. I made the original path, then expanded it, then filled it in, then hid the original path. This left the svg with some unnecessary information."),j.forEach(a),r=g(t),k=w(t,"P",{});var B=c(k);H=h(B,"I wrote the new version by hand. It\u2019s just a path with a stroke width and rounded joints and ends like you\u2019d expect."),B.forEach(a),C=g(t),Q(I.$$.fragment,t),G=g(t),x=w(t,"P",{});var M=c(x);U=h(M,"The "),T=w(M,"CODE",{});var st=c(T);J=h(st,"viewBox"),st.forEach(a),L=h(M," is like the canvas; it goes from (0, 0) to (14, 14). The actual path is a bit smaller, but I have to accommodate for the stroke width. I also gave some extra margin on the sides to make it a square, since I\u2019m using this as a favicon and logo."),M.forEach(a),N=g(t),P=w(t,"P",{});var at=c(P);O=h(at,"It starts at the coordinate (4, 2), then draws a line segment that\u2019s right 8 units and down 5 units. Then it goes straight down for 6 units, and so on."),at.forEach(a),S=g(t),E=w(t,"P",{});var et=c(E);R=h(et,"I used Illustrator to export the image as different sized PNGs - ranging from 16 to 2048 pixels wide."),et.forEach(a),W=g(t),q=w(t,"P",{});var nt=c(q);V=h(nt,"I tried to add the svg to this post, but WordPress doesn\u2019t let me do that - very lame."),nt.forEach(a),z=g(t),Q(y.$$.fragment,t),A=g(t),b=rt(t,"svg",{xmlns:!0,viewBox:!0});var ot=c(b);d=rt(ot,"path",{d:!0,fill:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0}),c(d).forEach(a),ot.forEach(a),this.h()},h(){$(d,"d","M4 2l8 5l0 6l-10-12l10 0l-10 12l0-6l8-5"),$(d,"fill","none"),$(d,"stroke","#21326D"),$(d,"stroke-width","0.7"),$(d,"stroke-linecap","round"),$(d,"stroke-linejoin","round"),$(b,"xmlns","http://www.w3.org/2000/svg"),$(b,"viewBox","0 0 14 14")},m(t,e){o(t,s,e),u(s,l),o(t,p,e),o(t,i,e),u(i,n),o(t,r,e),o(t,k,e),u(k,H),o(t,C,e),X(I,t,e),o(t,G,e),o(t,x,e),u(x,U),u(x,T),u(T,J),u(x,L),o(t,N,e),o(t,P,e),u(P,O),o(t,S,e),o(t,E,e),u(E,R),o(t,W,e),o(t,q,e),u(q,V),o(t,z,e),X(y,t,e),o(t,A,e),o(t,b,e),u(b,d),D=!0},p(t,e){const j={};e&2&&(j.$$scope={dirty:e,ctx:t}),I.$set(j);const B={};e&2&&(B.$$scope={dirty:e,ctx:t}),y.$set(B)},i(t){D||(Y(I.$$.fragment,t),Y(y.$$.fragment,t),D=!0)},o(t){Z(I.$$.fragment,t),Z(y.$$.fragment,t),D=!1},d(t){t&&a(s),t&&a(p),t&&a(i),t&&a(r),t&&a(k),t&&a(C),tt(I,t),t&&a(G),t&&a(x),t&&a(N),t&&a(P),t&&a(S),t&&a(E),t&&a(W),t&&a(q),t&&a(z),tt(y,t),t&&a(A),t&&a(b)}}}function It(m){let s,l;const p=[m[0],ut];let i={$$slots:{default:[$t]},$$scope:{ctx:m}};for(let n=0;n<p.length;n+=1)i=F(i,p[n]);return s=new kt({props:i}),{c(){K(s.$$.fragment)},l(n){Q(s.$$.fragment,n)},m(n,r){X(s,n,r),l=!0},p(n,[r]){const k=r&1?ft(p,[r&1&&lt(n[0]),r&0&&lt(ut)]):{};r&2&&(k.$$scope={dirty:r,ctx:n}),s.$set(k)},i(n){l||(Y(s.$$.fragment,n),l=!0)},o(n){Z(s.$$.fragment,n),l=!1},d(n){tt(s,n)}}}const ut={draft:!1,title:"simplify",date:"2022-02-18",desc:"Compressing my SVG logo",tags:["design","code"]};function xt(m,s,l){return m.$$set=p=>{l(0,s=F(F({},s),pt(p)))},s=pt(s),[s]}class Bt extends ct{constructor(s){super();mt(this,s,xt,It,dt,{})}}export{Bt as default,ut as metadata};
