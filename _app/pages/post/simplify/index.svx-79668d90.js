import{S as ct,i as mt,s as dt,C as F,w as K,x as Q,y as X,z as ft,A as lt,q as Y,o as Z,B as tt,T as pt,e as v,t as f,k as g,H as it,c as _,a as u,h,d as a,m as w,I as rt,b as $,g as o,J as c,G as ht}from"../../../chunks/vendor-4e826582.js";import{P as kt}from"../../../chunks/post-f0963b8b.js";import{C as vt}from"../../../chunks/CodeBlock-7a3c3e1d.js";import{U as gt}from"../../../chunks/Update-31e56738.js";import"../../../chunks/stores-6bae2da7.js";import"../../../chunks/Progress-83a8291b.js";/* empty css                                      */function _t(m){let s,l=`<code class="language-svg"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>
  <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 14 14<span class="token punctuation">"</span></span>
<span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
    <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M4 2l8 5l0 6l-10-12l10 0l-10 12l0-6l8-5<span class="token punctuation">"</span></span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#21326D<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.7<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-linecap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>round<span class="token punctuation">"</span></span>
    <span class="token attr-name">stroke-linejoin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>round<span class="token punctuation">"</span></span>
  <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code>`;return{c(){s=v("pre"),this.h()},l(p){s=_(p,"PRE",{class:!0});var i=u(s);i.forEach(a),this.h()},h(){$(s,"class","language-svg")},m(p,i){o(p,s,i),s.innerHTML=l},p:ht,d(p){p&&a(s)}}}function wt(m){let s;return{c(){s=f("Not on WordPress anymore :)")},l(l){s=h(l,"Not on WordPress anymore :)")},m(l,p){o(l,s,p)},d(l){l&&a(s)}}}function $t(m){let s,l,p,i,n,r,k,U,C,I,G,x,H,q,J,L,N,P,O,S,j,R,W,E,V,z,b,A,y,d,D;return I=new vt({props:{filename:"logo.svg",lang:"svg",$$slots:{default:[_t]},$$scope:{ctx:m}}}),b=new gt({props:{date:"2022-02-24",$$slots:{default:[wt]},$$scope:{ctx:m}}}),{c(){s=v("p"),l=f("I simplified my logo a bit. It looks pretty much the same, but the underlying svg is much smaller."),p=g(),i=v("p"),n=f("I originally made the logo in Adobe Illustrator. I made the original path, then expanded it, then filled it in, then hid the original path. This left the svg with some unnecessary information."),r=g(),k=v("p"),U=f("I wrote the new version by hand. It\u2019s just a path with a stroke width and rounded joints and ends like you\u2019d expect."),C=g(),K(I.$$.fragment),G=g(),x=v("p"),H=f("The "),q=v("code"),J=f("viewBox"),L=f(" is like the canvas; it goes from (0, 0) to (14, 14). The actual path is a bit smaller, but I have to accommodate for the stroke width. I also gave some extra margin on the sides to make it a square, since I\u2019m using this as a favicon and logo."),N=g(),P=v("p"),O=f("It starts at the coordinate (4, 2), then draws a line segment that\u2019s right 8 units and down 5 units. Then it goes straight down for 6 units, and so on."),S=g(),j=v("p"),R=f("I used Illustrator to export the image as different sized PNGs - ranging from 16 to 2048 pixels wide."),W=g(),E=v("p"),V=f("I tried to add the svg to this post, but WordPress doesn\u2019t let me do that - very lame."),z=g(),K(b.$$.fragment),A=g(),y=it("svg"),d=it("path"),this.h()},l(t){s=_(t,"P",{});var e=u(s);l=h(e,"I simplified my logo a bit. It looks pretty much the same, but the underlying svg is much smaller."),e.forEach(a),p=w(t),i=_(t,"P",{});var T=u(i);n=h(T,"I originally made the logo in Adobe Illustrator. I made the original path, then expanded it, then filled it in, then hid the original path. This left the svg with some unnecessary information."),T.forEach(a),r=w(t),k=_(t,"P",{});var B=u(k);U=h(B,"I wrote the new version by hand. It\u2019s just a path with a stroke width and rounded joints and ends like you\u2019d expect."),B.forEach(a),C=w(t),Q(I.$$.fragment,t),G=w(t),x=_(t,"P",{});var M=u(x);H=h(M,"The "),q=_(M,"CODE",{});var st=u(q);J=h(st,"viewBox"),st.forEach(a),L=h(M," is like the canvas; it goes from (0, 0) to (14, 14). The actual path is a bit smaller, but I have to accommodate for the stroke width. I also gave some extra margin on the sides to make it a square, since I\u2019m using this as a favicon and logo."),M.forEach(a),N=w(t),P=_(t,"P",{});var at=u(P);O=h(at,"It starts at the coordinate (4, 2), then draws a line segment that\u2019s right 8 units and down 5 units. Then it goes straight down for 6 units, and so on."),at.forEach(a),S=w(t),j=_(t,"P",{});var et=u(j);R=h(et,"I used Illustrator to export the image as different sized PNGs - ranging from 16 to 2048 pixels wide."),et.forEach(a),W=w(t),E=_(t,"P",{});var nt=u(E);V=h(nt,"I tried to add the svg to this post, but WordPress doesn\u2019t let me do that - very lame."),nt.forEach(a),z=w(t),Q(b.$$.fragment,t),A=w(t),y=rt(t,"svg",{xmlns:!0,viewBox:!0});var ot=u(y);d=rt(ot,"path",{d:!0,fill:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0}),u(d).forEach(a),ot.forEach(a),this.h()},h(){$(d,"d","M4 2l8 5l0 6l-10-12l10 0l-10 12l0-6l8-5"),$(d,"fill","none"),$(d,"stroke","#21326D"),$(d,"stroke-width","0.7"),$(d,"stroke-linecap","round"),$(d,"stroke-linejoin","round"),$(y,"xmlns","http://www.w3.org/2000/svg"),$(y,"viewBox","0 0 14 14")},m(t,e){o(t,s,e),c(s,l),o(t,p,e),o(t,i,e),c(i,n),o(t,r,e),o(t,k,e),c(k,U),o(t,C,e),X(I,t,e),o(t,G,e),o(t,x,e),c(x,H),c(x,q),c(q,J),c(x,L),o(t,N,e),o(t,P,e),c(P,O),o(t,S,e),o(t,j,e),c(j,R),o(t,W,e),o(t,E,e),c(E,V),o(t,z,e),X(b,t,e),o(t,A,e),o(t,y,e),c(y,d),D=!0},p(t,e){const T={};e&2&&(T.$$scope={dirty:e,ctx:t}),I.$set(T);const B={};e&2&&(B.$$scope={dirty:e,ctx:t}),b.$set(B)},i(t){D||(Y(I.$$.fragment,t),Y(b.$$.fragment,t),D=!0)},o(t){Z(I.$$.fragment,t),Z(b.$$.fragment,t),D=!1},d(t){t&&a(s),t&&a(p),t&&a(i),t&&a(r),t&&a(k),t&&a(C),tt(I,t),t&&a(G),t&&a(x),t&&a(N),t&&a(P),t&&a(S),t&&a(j),t&&a(W),t&&a(E),t&&a(z),tt(b,t),t&&a(A),t&&a(y)}}}function It(m){let s,l;const p=[m[0],ut];let i={$$slots:{default:[$t]},$$scope:{ctx:m}};for(let n=0;n<p.length;n+=1)i=F(i,p[n]);return s=new kt({props:i}),{c(){K(s.$$.fragment)},l(n){Q(s.$$.fragment,n)},m(n,r){X(s,n,r),l=!0},p(n,[r]){const k=r&1?ft(p,[r&1&&lt(n[0]),r&0&&lt(ut)]):{};r&2&&(k.$$scope={dirty:r,ctx:n}),s.$set(k)},i(n){l||(Y(s.$$.fragment,n),l=!0)},o(n){Z(s.$$.fragment,n),l=!1},d(n){tt(s,n)}}}const ut={draft:!1,title:"simplify",date:"2022-02-19",desc:"Compressing my SVG logo",tags:["design","code"]};function xt(m,s,l){return m.$$set=p=>{l(0,s=F(F({},s),pt(p)))},s=pt(s),[s]}class Bt extends ct{constructor(s){super();mt(this,s,xt,It,dt,{})}}export{Bt as default,ut as metadata};
